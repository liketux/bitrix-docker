version: '3'

services:
  front:
    restart: unless-stopped
    build:
      context: ./docker/front
      dockerfile: front.docker
    ports:
      - 443:443/tcp
      - 80:80/tcp
    environment:
      CERTBOT_EMAIL: ${CERTBOT_EMAIL}
      ENVSUBST_VARS: FQDN
      FQDN: ${DOMAIN}
    volumes:
      - ./docker/front/user.conf.d:/etc/nginx/user.conf.d:ro
      - ./storage/docker/letsencrypt:/etc/letsencrypt
    depends_on:
      - nginx
    networks:
      - bitrix

  nginx:
    build:
      context: ./docker/nginx
      dockerfile: nginx.docker
    volumes:
      - ./www:/var/www/bitrix
      - ./storage/docker/logs/nginx/:/var/log/nginx/
    ports:
      - "80"
    depends_on:
      - php-fpm
      - php-fpm-cli
    networks:
      bitrix:
        ipv4_address: ${NGINX_INTERFACE}

  memcached:
    restart: unless-stopped
    build:
      context: ./docker/memcached
      dockerfile: memcached.docker
    volumes:
      - ./storage/docker/memcached:/var/lib/memcached
    ports:
      - "11211"
    depends_on:
      - php-fpm
    networks:
      - bitrix

  redis:
    restart: unless-stopped
    build:
      context: ./docker/redis
      dockerfile: redis.docker
    volumes:
      - ./storage/docker/redis:/data
    ports:
      - "6379"
    networks:
      - bitrix

  php-fpm-cli:
    restart: unless-stopped
    build:
      context: ./docker/php
      dockerfile: php-fpm-cli.docker
    volumes:
      - ./www:/var/www/bitrix
    depends_on:
      - mysql
    tty: true
    networks:
      - bitrix

  php-fpm:
    restart: unless-stopped
    build:
      context: ./docker/php
      dockerfile: php-fpm.docker
    volumes:
      - ./www:/var/www/bitrix:delegated
      - ./storage/docker/logs/php/:/var/log/php/
    depends_on:
      - mysql
    networks:
      - bitrix

  mysql:
    restart: unless-stopped
    build:
      context: ./docker/mysql
      dockerfile: mysql.docker
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    ports:
      - "3306"
    volumes:
      - ./storage/docker/mysql/:/var/lib/mysql/
    networks:
      - bitrix

  elasticsearch:
    restart: unless-stopped
    build:
      context: ./docker/elasticsearch
      dockerfile: es.docker
    environment:
      - discovery.type=single-node
    ports:
      - "9200"
    volumes:
      - ./storage/docker/elasticsearch/:/usr/share/elasticsearch/data/
    networks:
      - bitrix

networks:
  bitrix:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: 10.100.0.0/24